from pathlib import Path
import re

# --- set your roots ---
image_root  = Path("/path/to/Output_Files_08_08_2025")
prompt_root = Path("/path/to/Prompt_Inputs")

IMG_RX = re.compile(r"^page[-_]{1,2}([0-9]+)\.(?:jpe?g|png|webp|tif|tiff|bmp)$", re.IGNORECASE)
PRINT_CONTENT = False   # set True to also print a short snippet of the prompt text

for uuid_dir in sorted(d for d in image_root.iterdir() if d.is_dir()):
    print(f"\n# UUID: {uuid_dir.name}")
    for doc_dir in sorted(d for d in uuid_dir.iterdir() if d.is_dir()):
        rel = doc_dir.relative_to(image_root)   # <UUID>/<doc>
        print(f"  > Doc: {rel}")
        images = sorted(p for p in doc_dir.iterdir() if p.is_file() and IMG_RX.match(p.name))
        if not images:
            print("    (no images)")
            continue

        for img in images:
            n = int(IMG_RX.match(img.name).group(1))
            prompt = prompt_root / rel / f"prompt__{n}.txt"  # STRICT double underscore
            if prompt.exists():
                if PRINT_CONTENT:
                    txt = prompt.read_text(encoding="utf-8", errors="ignore")
                    snippet = txt[:120].replace("\n", " ")
                    print(f"    page {n:>3}: {img.name}  |  {prompt.name}  |  {snippet}...")
                else:
                    print(f"    page {n:>3}: {img}  ||  {prompt}")
            else:
                print(f"    page {n:>3}: {img}  !!  MISSING PROMPT -> {prompt}")
