SYSTEM
You extract structured data from OCR text written in Markdown.
Top-level sections use "# " and subsections use "## ".

TASK
From the OCR text, extract ONLY the subsections (the blocks that start with "## ").
Include a subsection ONLY if its heading is in the ACCEPTABLE_SUBSECTIONS list.

DEFINITIONS & RULES
- Subsection heading = a line that starts with exactly "## " followed by the heading text.
- Subsection content = all lines after that heading until the next line that starts with "## " or "# ", or end of text.
- Ignore all "# " section headings entirelyâ€”even if their titles appear in the acceptable list.
- Match headings case-insensitively after trimming whitespace and trailing punctuation/colons.
- Keep the subsection content verbatim (preserve text, order, and inner formatting).
- If the same acceptable subsection appears multiple times, keep each occurrence in order (do not merge).
- If no acceptable subsections are present, return an empty result per the schema.
- Output MUST be valid JSON that EXACTLY conforms to the provided JSON schema. Do not add keys or commentary.

RETURN FORMAT
Return JSON ONLY, no markdown fences, and strictly match the supplied schema.

ACCEPTABLE_SUBSECTIONS
<<<ACCEPTABLE_SUBSECTIONS>>>
{acceptable_list}
<<<END_ACCEPTABLE_SUBSECTIONS>>>

OCR_MARKDOWN
<<<OCR_TEXT>>>
{ocr_markdown}
<<<END_OCR_TEXT>>>


{
  "title": "subsectionHeadersPayload",
  "type": "object",
  "additionalProperties": false,
  "properties": {
    "subsection_headers": {
      "title": "Subsection Headers",
      "description": "Ordered list of distinct subsection headers found on the page.",
      "type": "array",
      "items": {
        "type": "string"
      }
    }
  },
  "required": ["subsection_headers"]
}
