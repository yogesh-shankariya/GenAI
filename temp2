from pathlib import Path
import re

STAR_SPLIT = re.compile(r"(?:\r?\n)?\s*\*{3,}\s*(?:\r?\n)")   # lines of *** as record separators
FIELD_RE   = re.compile(r"^(?P<key>[^:\n]+?)\s+is\s+(?P<val>.*)$", re.IGNORECASE)

def _to_markdown(text: str) -> str:
    """Convert one chunk file's content (asterisk-separated) to markdown text."""
    records = [r.strip() for r in STAR_SPLIT.split(text) if r.strip()]
    out_lines = []
    for rec in records:
        out_lines.append("### record\n")  # no numbering
        for raw in rec.splitlines():
            line = raw.strip()
            if not line:
                continue
            m = FIELD_RE.match(line)
            if m:
                key = m.group("key").strip()
                val = m.group("val").strip()
                out_lines.append(f"#### {key}\n{val}\n")
            else:
                # Fallback: keep the line under an 'unnamed' bucket
                out_lines.append(f"#### detail\n{line}\n")
        out_lines.append("")  # blank line after each record
    return "\n".join(out_lines).strip() + "\n"

def convert_mcid_folder(mcid_folder: str, inplace: bool = False) -> list[Path]:
    """
    Convert all 'chunk_*.txt' files under an MCID folder into Markdown-formatted .txt files.
    - mcid_folder: path like '.../TMV_ChatBot_Final/Normalised_Input_Jsons/<MCID>'
    - inplace=False (default): writes alongside as '<name>_md.txt' to avoid overwriting
      Set inplace=True to overwrite the original files.
    Returns list of files written.
    """
    base = Path(mcid_folder)
    if not base.is_dir():
        raise FileNotFoundError(f"MCID folder not found: {mcid_folder}")

    written = []
    for txt in base.rglob("chunk_*.txt"):
        try:
            content = txt.read_text(encoding="utf-8", errors="ignore")
            md = _to_markdown(content)

            if inplace:
                out_path = txt
            else:
                out_path = txt.with_name(txt.stem + "_md.txt")

            out_path.write_text(md, encoding="utf-8")
            written.append(out_path)
        except Exception as e:
            print(f"[WARN] Skipped {txt}: {e}")
    return written

# --- Example ---
# convert_mcid_folder(r"../TMV_ChatBot_Final/Normalised_Input_Jsons/74380480", inplace=False)
