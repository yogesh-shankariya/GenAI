from typing import List, Literal, Union
from pydantic import BaseModel, Field

# --- First 8 steps ---
class StepDecision(BaseModel):
    name: str = Field(..., description="Exact step name.")
    value: bool = Field(..., description="true/false for this step on this page.")
    evidence: List[str] = Field(..., description="Verbatim snippet(s) from the page.")
    reason: str = Field(..., description="Short justification tied to the evidence.")
    model_config = {"extra": "forbid"}

# --- Final step (combined outcome) ---
class FinalDecision(BaseModel):
    name: Literal["Final Decision"] = "Final Decision"
    decision: Literal["APPRO", "DANY"] = Field(..., description="Combined outcome.")
    evidence: List[str] = Field(..., description="Snippet(s) supporting the final decision.")
    reason: str = Field(..., description="Why APPRO or DANY based on steps 1â€“8.")
    model_config = {"extra": "forbid"}

# --- Whole response ---
class SkilledNursingPageOutput(BaseModel):
    results: List[Union[StepDecision, FinalDecision]]
    model_config = {"extra": "forbid"}
