import re
from typing import List

TAG_PATTERN = r'<ocr_service_page_start>(\d+)<ocr_service_page_start>'

def chunk_context(context: str, chunk_size: int = 50, overlap: int = 20) -> List[str]:
    page_tags = list(re.finditer(TAG_PATTERN, context))
    page_numbers = [int(match.group(1)) for match in page_tags]

    chunks = []
    start_index = 0

    while start_index < len(page_numbers):
        start_page = page_numbers[start_index]
        end_page_number = start_page + chunk_size - 1

        end_index = start_index
        while end_index < len(page_numbers) and page_numbers[end_index] <= end_page_number:
            end_index += 1

        if end_index < len(page_numbers):
            end_offset = page_tags[end_index].start()
        else:
            end_offset = len(context)

        start_offset = page_tags[start_index].start()
        chunk = context[start_offset:end_offset]
        chunks.append(chunk)

        # Move the start_index forward by (chunk_size - overlap)
        next_start_page = start_page + chunk_size - overlap

        # Find the index of the next starting page
        start_index = next((i for i, p in enumerate(page_numbers) if p >= next_start_page), len(page_numbers))

    return chunks
