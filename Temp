def process_files_from_api_sequential(base_path: str, start_seq: int = 1) -> Dict[int, str]:
    """
    Download documents sequentially and return {seq: extracted_text}.
    Stops when a 404 is encountered.
    """
    chart_path = os.path.dirname(base_path)
    folder_name = os.path.basename(chart_path)

    seq = start_seq
    contents = {}

    while True:
        url = (
            "https://document.synthesisuat.awsdns.internal.das/api/document/download?"
            f"filePath={chart_path}/{folder_name}docXtrOutput-encounter-{seq}.txt"
        )

        try:
            r = requests.get(url, verify=False, timeout=15)
            r.raise_for_status()

            logger.info(f"Successfully fetched document: seq={seq} URL={url}")

            contents[seq] = r.text  # Assuming it's plain text

        except requests.exceptions.HTTPError as e:
            if e.response.status_code == 404:
                logger.warning(f"Document not found (404): seq={seq} URL={url}")
                break
            else:
                logger.error(f"HTTP error for seq={seq} URL={url}: {e}")
                break
        except Exception as e:
            logger.exception(f"Unexpected error while fetching seq={seq} URL={url}: {e}")
            break

        seq += 1

    return contents
