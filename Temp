from fastapi import FastAPI, Request
from pydantic import BaseModel
from typing import List, Optional
import requests

app = FastAPI()

# Base URL to fetch the chunk content
BASE_URL = "https://ingestion.synthesisuat.awsdns.internal.das/api/storage/download?filePath={}&isDecrypt=true"

# Define input schema
class Chunk(BaseModel):
    loincd: Optional[str] = ""
    loincd_desc: Optional[str] = ""
    chunk_url: str

class RequestModel(BaseModel):
    trace_id: Optional[str] = ""
    file_name: Optional[str] = ""
    file_path: Optional[str] = ""
    file_type: Optional[str] = ""
    chunks: List[Chunk]

@app.post("/referral")
async def referral(input_data: RequestModel):
    combined_xml = ""

    for chunk in input_data.chunks:
        full_url = BASE_URL.format(chunk.chunk_url)
        try:
            response = requests.get(full_url, verify=False, timeout=15)
            if response.status_code == 200:
                combined_xml += response.text.strip() + "\n"
            else:
                return {"error": f"Failed to fetch: {chunk.chunk_url}, Status: {response.status_code}"}
        except Exception as e:
            return {"error": f"Exception occurred while fetching {chunk.chunk_url}: {str(e)}"}

    return combined_xml
