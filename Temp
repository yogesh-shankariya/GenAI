from typing import List, Literal
from pydantic import BaseModel, Field


class BooleanStep(BaseModel):
    name: str
    value: bool
    evidence: List[str]
    reason: str


class FinalDecisionStep(BaseModel):
    name: str
    value: Literal["APPROVE", "DENY"]
    evidence: List[str]
    reason: str


class SkilledNursingStepsOutput(BaseModel):
    need_for_skilled_nursing_care: BooleanStep = Field(..., alias="Need for Skilled Nursing Care (General Requirement)")
    meets_medicare_defn: BooleanStep = Field(..., alias='Meets Medicare “Intermittent/Part-time” Definition')
    observation_and_assessment: BooleanStep = Field(..., alias="Observation & Assessment Need")
    teaching_and_training: BooleanStep = Field(..., alias="Teaching & Training Need")
    medication_admin: BooleanStep = Field(..., alias="Medication Administration Need")
    catheter_care: BooleanStep = Field(..., alias="Catheter Care Need")
    wound_care: BooleanStep = Field(..., alias="Wound Care Need")
    ostomy_care: BooleanStep = Field(..., alias="Ostomy Care Need")
    final_decision: FinalDecisionStep = Field(..., alias="Final Decision")

    model_config = {
        "extra": "forbid",
        "populate_by_name": True
    }
