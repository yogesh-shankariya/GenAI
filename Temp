from pydantic import BaseModel, Field


class PatientAddress(BaseModel):
    address_line_1: str = Field(..., title="Address Line 1")
    address_line_2: str = Field(..., title="Address Line 2")
    address_city:   str = Field(..., title="City")
    address_state:  str = Field(..., title="State")
    address_postalcode: str = Field(..., title="Postal Code")

    model_config = {"extra": "forbid"}


class MemberDemographics(BaseModel):
    patient_mrn: str = Field(...)
    patient_first_name: str = Field(...)
    patient_middle_name: str = Field(...)
    patient_last_name: str = Field(...)
    patient_date_of_birth: str = Field(...)
    patient_gender: str = Field(...)
    patient_phone_number: str = Field(...)
    is_extracted_phone_number_related_to_patient: str = Field(
        ...,
        alias="Is extracted phone number related to patient?"
    )
    reason_for_phone_number: str = Field(
        ...,
        alias="Reason for considering extracted phone number is of patient's phone number"
    )
    patient_email: str = Field(...)
    patient_address: PatientAddress = Field(...)
    is_extracted_address_related_to_patient: str = Field(
        ...,
        alias="Is extracted address related to patient?"
    )
    reason_for_address: str = Field(
        ...,
        alias="Reason for considering extracted address is of patient's address"
    )

    model_config = {
        "extra": "forbid",
        "populate_by_name": True   # let you supply data via alias or field name
    }
