import json
import os

def extract_instructions(input_json_path, output_json_path):
    """
    Extracts all 'extraction_instruction' values from a nested JSON structure
    and writes them into a new JSON with keys extraction_instruction_1, extraction_instruction_2, etc.
    
    Args:
        input_json_path (str): Path to the input JSON file
        output_json_path (str): Path to store the output JSON file
    """
    if not os.path.exists(input_json_path):
        raise FileNotFoundError(f"Input file not found: {input_json_path}")

    # Load the JSON file
    with open(input_json_path, 'r', encoding='utf-8') as f:
        data = json.load(f)

    extraction_data = {}
    counter = 1

    # Traverse the structure
    sections = data.get("sections", [])
    for section in sections:
        data_points = section.get("data-points", [])
        for dp in data_points:
            instruction = dp.get("extraction_instruction")
            if instruction is not None:
                key_name = f"extraction_instruction_{counter}"
                extraction_data[key_name] = instruction
                counter += 1

    # Save the extracted instructions
    with open(output_json_path, 'w', encoding='utf-8') as f:
        json.dump(extraction_data, f, indent=4, ensure_ascii=False)

    print(f"Extraction completed. Output saved to: {output_json_path}")
