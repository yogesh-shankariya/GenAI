# utils for timing -----------------------------------------------------------
from typing import Callable, Any, Awaitable

async def _run_timed(
    coro: Awaitable[Any],
    *,
    key: str,
    metrics: dict | None = None,
) -> Any:
    """
    Await `coro`, store its output & elapsed time (ms) in `metrics`
    under   ‹key›_ms   and   ‹key›_output.
    """
    t0 = time.perf_counter()
    result = await coro
    if metrics is not None:
        metrics.update({
            f"{key}_ms":     round((time.perf_counter() - t0) * 1_000, 1),
            f"{key}_output": json.dumps(result) if not isinstance(result, str) else result,
        })
    return result
