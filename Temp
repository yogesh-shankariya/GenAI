# process_file_api.py
import os, io, requests
from typing import Dict
from PyPDF2 import PdfReader        # pip install PyPDF2


def _pdf_bytes_to_text(binary: bytes) -> str:
    """Extract plain text from a PDF in-memory buffer."""
    reader = PdfReader(io.BytesIO(binary))
    pages  = [p.extract_text() or "" for p in reader.pages]
    return "\n".join(pages).strip()


def process_files_from_api_sequential(base_path: str, start_seq: int = 1) -> Dict[int, str]:
    """
    Download documents sequentially and return {seq: extracted_text}.
    Stops when a 404 is encountered.
    """
    chart_path  = os.path.dirname(base_path)
    folder_name = os.path.basename(chart_path)

    seq      = start_seq
    contents = {}

    while True:
        url = (
            "https://document.synthesisuat.awsdns.internal.das/api/document/download?"
            f"filePath={chart_path}/{folder_name}docXtrOutput-encounter-{seq}.txt"
        )

        try:
            r = requests.get(url, verify=False, timeout=15)
            r.raise_for_status()

            pdf_bytes = r.content      # downloaded file is always PDF
            text      = _pdf_bytes_to_text(pdf_bytes) or "[EMPTY_PDF]"
            contents[seq] = text
            seq += 1

        except requests.exceptions.HTTPError as e:
            if e.response.status_code == 404:
                break
            raise                  # propagate other HTTP errors
        except Exception as e:
            print(f"Error fetching {url}: {e}")
            break

    return contents
