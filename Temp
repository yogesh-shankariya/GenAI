from typing import List
from pydantic import BaseModel, Field, field_validator


class EncounterProvider(BaseModel):
    """
    Detailed info about a single healthcare provider associated with the encounter,
    plus evidence text for each extracted field.
    """
    provider_role: str = Field(
        ...,
        description="Role of the healthcare provider found in medical chart."
    )
    evidence_for_provider_role: str = Field(
        ...,
        description="Sentence/paragraph showing where the provider role was found."
    )

    provider_name: str = Field(
        ...,
        description="Full name of the healthcare provider found in medical chart."
    )
    evidence_for_provider_name: str = Field(
        ...,
        description="Sentence/paragraph showing where the provider name was found."
    )

    provider_speciality: str = Field(
        ...,
        description="Medical speciality of the healthcare provider found in medical chart."
    )
    evidence_for_provider_speciality: str = Field(
        ...,
        description="Sentence/paragraph showing where the speciality was found."
    )

    provider_npi: str = Field(
        ...,
        description="National Provider Identifier (10-digit) found in the chart."
    )
    evidence_for_provider_npi: str = Field(
        ...,
        description="Sentence/paragraph showing where the NPI was found."
    )

    provider_health_organization: str = Field(
        ...,
        description="Healthcare organization affiliated with the provider (if mentioned)."
    )
    evidence_for_provider_health_organization: str = Field(
        ...,
        description="Sentence/paragraph showing where the organization was found."
    )

    # Optional: automatic bytearray/bytes â†’ str fix
    @field_validator("*", mode="before")
    @classmethod
    def decode_bytes(cls, v):
        if isinstance(v, (bytes, bytearray)):
            return v.decode()
        return v

    model_config = {"extra": "forbid"}


class EncounterProviderItem(BaseModel):
    """
    Wrapper for a single provider entry inside the encounter_providers array.
    Matches the JSON where each object has a single key: 'encounter_provider'.
    """
    encounter_provider: EncounterProvider

    model_config = {"extra": "forbid"}


class EncounterProvidersPayload(BaseModel):
    """
    Top-level payload containing a list of provider items.
    The list can contain multiple entries (even if they are duplicates in shape).
    """
    encounter_providers: List[EncounterProviderItem] = Field(
        ...,
        description="Array of encounter providers with evidence fields."
    )

    model_config = {"extra": "forbid"}
