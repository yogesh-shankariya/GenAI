To create a **virtual environment** in **VS Code** using `python -m venv venv` and ensure it's **reusable across projects** or at least detected correctly as a **kernel**, follow these steps:

---

### âœ… **Step-by-Step to Create & Use Virtual Environment in VS Code**

#### **1. Create the virtual environment**
Open your terminal and run:
```bash
python -m venv ~/my_envs/rag_env
```
- This creates a virtual environment named `rag_env` inside a reusable directory `~/my_envs/`.

> You can keep multiple reusable environments in this `my_envs` directory.

---

#### **2. Activate the environment**

**Windows (PowerShell):**
```bash
~/my_envs/rag_env/Scripts/Activate.ps1
```

**macOS/Linux:**
```bash
source ~/my_envs/rag_env/bin/activate
```

---

#### **3. Install required packages**
```bash
pip install -r requirements.txt
```

---

#### **4. Make it visible to Jupyter/VS Code Kernels**

Run:
```bash
pip install ipykernel
python -m ipykernel install --user --name=rag_env --display-name "Python (rag_env)"
```
- This registers the environment as a selectable **kernel** in VS Code and Jupyter.

---

#### **5. Use the environment in VS Code**

- Open VS Code.
- Open any folder (your RAG project).
- Press `Ctrl + Shift + P` â†’ search for **"Python: Select Interpreter"**
- Choose: **"Python (rag_env)"**

---

### ðŸ’¡ Tips for Reuse

- You **do not need to recreate venv** for each folder.
- Just **activate the same environment** and use it across folders.
- Alternatively, use **`.env`** files or VS Code settings (`.vscode/settings.json`) to point to a shared venv.

---

Would you like a reusable `.vscode/settings.json` template to always pick your shared environment?
